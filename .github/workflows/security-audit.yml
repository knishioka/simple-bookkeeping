name: Security Audit

on:
  schedule:
    - cron: '0 0 * * 1' # æ¯Žé€±æœˆæ›œæ—¥ 9:00 JST (00:00 UTC)
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        id: audit
        continue-on-error: true
        run: |
          echo "## Security Audit Report" > audit-report.md
          echo "Date: $(date +'%Y-%m-%d %H:%M:%S')" >> audit-report.md
          echo "" >> audit-report.md

          # pnpm audit
          echo "### pnpm audit" >> audit-report.md
          echo '```' >> audit-report.md
          pnpm audit --audit-level moderate | tee -a audit-report.md 2>&1 || echo "pnpm audit found vulnerabilities"
          echo '```' >> audit-report.md
          echo "" >> audit-report.md

          # Check for outdated dependencies
          echo "### Outdated Dependencies" >> audit-report.md
          echo '```' >> audit-report.md
          pnpm outdated 2>&1 | head -30 >> audit-report.md || true
          echo '```' >> audit-report.md

          # Set exit code based on audit results
          pnpm audit --audit-level high > /dev/null 2>&1 || echo "high_vulnerabilities=true" >> "$GITHUB_OUTPUT"

      - name: Check for critical updates
        id: critical
        run: |
          # Check for major security updates in common packages
          CRITICAL_PACKAGES="express next react prisma @prisma/client typescript"
          echo "### Critical Package Versions" >> audit-report.md
          echo "" >> audit-report.md

          for package in $CRITICAL_PACKAGES; do
            current=$(pnpm list "$package" --depth=0 2>/dev/null | grep -E "^$package " | awk '{print $2}' || echo "not installed")
            latest=$(npm view "$package" version 2>/dev/null || echo "unknown")
            echo "- **$package**: Current: $current, Latest: $latest" >> audit-report.md
          done

      - name: Create issue if vulnerabilities found
        if: steps.audit.outputs.high_vulnerabilities == 'true' || failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('audit-report.md', 'utf8');

            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security vulnerabilities detected - ' + new Date().toISOString().split('T')[0],
              body: `Security audit found vulnerabilities that require attention.

              ${report}

              ## Action Required

              1. Review the vulnerabilities listed above
              2. Update affected packages using \`pnpm update\` or Dependabot PRs
              3. For major updates, create a separate issue for planning
              4. Close this issue once all high/critical vulnerabilities are resolved
              ---
              *This issue was automatically created by the weekly security audit workflow.*`,
              labels: ['security', 'urgent', 'dependencies']
            });

            console.log(`Created issue #${issue.data.number}`);

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: audit-report.md
          retention-days: 30

      - name: Summary
        if: always()
        run: |
          echo "## ðŸ“Š Security Audit Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          cat audit-report.md >> "$GITHUB_STEP_SUMMARY"

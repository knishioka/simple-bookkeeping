name: E2E Tests (Fast)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

# Prevent concurrent runs for the same PR
concurrency:
  group: e2e-tests-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 8 # Reduced to 8 minutes for fast test suite (Issue #336)

    strategy:
      fail-fast: false
      matrix:
        shard: [1/3, 2/3, 3/3] # Split tests into 3 shards for parallel execution

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: bookkeeping_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Setup database
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/bookkeeping_test
        run: |
          pnpm --filter @simple-bookkeeping/database prisma:generate
          cd packages/database && npx prisma db push --skip-generate

      - name: Build packages first
        run: pnpm build:packages
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}

      - name: Build Web application
        run: pnpm --filter @simple-bookkeeping/web build
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/bookkeeping_test
          DOCKER_BUILD: false
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm --filter @simple-bookkeeping/web exec playwright install --with-deps chromium

      - name: Install Playwright browser deps (cache hit)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm --filter @simple-bookkeeping/web exec playwright install-deps chromium

      - name: Start Web server in background
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/bookkeeping_test
          NEXTAUTH_SECRET: test-nextauth-secret
          NEXTAUTH_URL: http://localhost:3000
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}
        run: |
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] Starting web server..."
          cd apps/web
          npm run start &
          # Wait for server to be fully ready (optimized for fast startup)
          timeout 60 bash -c 'until curl -f http://localhost:3000 >/dev/null 2>&1; do
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Waiting for web server..."
            sleep 1
          done'
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] Web server is ready"

      - name: Run E2E tests with performance tracking
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/bookkeeping_test
          JWT_SECRET: test-secret-key
          NEXTAUTH_SECRET: test-nextauth-secret
          NEXTAUTH_URL: http://localhost:3000
          CI: true
          NODE_ENV: test
          REUSE_SERVER: true
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}
          # Test credentials from secrets (with fallbacks)
          TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET || 'test-jwt-secret-do-not-use-in-production' }}
          TEST_ADMIN_EMAIL: ${{ secrets.TEST_ADMIN_EMAIL || 'admin.test@localhost' }}
          TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD || 'AdminTest123!' }}
          TEST_ACCOUNTANT_EMAIL: ${{ secrets.TEST_ACCOUNTANT_EMAIL || 'accountant.test@localhost' }}
          TEST_ACCOUNTANT_PASSWORD: ${{ secrets.TEST_ACCOUNTANT_PASSWORD || 'AccountantTest123!' }}
          TEST_VIEWER_EMAIL: ${{ secrets.TEST_VIEWER_EMAIL || 'viewer.test@localhost' }}
          TEST_VIEWER_PASSWORD: ${{ secrets.TEST_VIEWER_PASSWORD || 'ViewerTest123!' }}
        run: |
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] Starting fast E2E test suite (shard ${{ matrix.shard }})"
          START_TIME=$(date +%s)

          # Run fast test suite with sharding and optimized config
          cd apps/web
          timeout 360 npx playwright test \
            --config playwright.config.fast.ts \
            --shard=${{ matrix.shard }} \
            --grep-invert="@slow|@integration" || TEST_EXIT=$?
            
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] Fast E2E tests (shard ${{ matrix.shard }}) completed in ${DURATION} seconds with exit code ${TEST_EXIT:-0}"
          echo "::notice title=E2E Performance (Shard ${{ matrix.shard }})::Tests completed in ${DURATION} seconds"

          # Save performance data with shard info
          echo "{\"duration\": ${DURATION}, \"shard\": \"${{ matrix.shard }}\", \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}" > ../../performance-report-${{ matrix.shard }}.json
          exit ${TEST_EXIT:-0}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-shard-${{ strategy.job-index }}
          path: apps/web/playwright-report/
          retention-days: 7

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos-shard-${{ strategy.job-index }}
          path: apps/web/test-results/
          retention-days: 3

      - name: Upload performance report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-report-shard-${{ strategy.job-index }}
          path: performance-report-${{ matrix.shard }}.json
          retention-days: 7

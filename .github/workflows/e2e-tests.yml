name: E2E Tests (Fast)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

# Prevent concurrent runs for the same PR
concurrency:
  group: e2e-tests-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Setup job that builds and caches dependencies
  setup:
    name: Setup E2E Environment
    uses: ./.github/workflows/reusable-setup.yml
    with:
      node-version: '20'
      build-packages: true
      build-app: true
      setup-database: false
      install-playwright: true
      playwright-browsers: 'chromium'
    secrets: inherit

  e2e-tests:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 8 # Reduced to 8 minutes for fast test suite (Issue #336)

    strategy:
      fail-fast: false
      matrix:
        shard: [1/3, 2/3, 3/3] # Split tests into 3 shards for parallel execution

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: bookkeeping_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore dependencies from cache
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Generate Prisma Client
        run: pnpm --filter @simple-bookkeeping/database prisma:generate
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/bookkeeping_test

      - name: Restore build cache
        uses: actions/cache/restore@v4
        with:
          path: |
            apps/web/.next
            packages/*/dist
            **/*.tsbuildinfo
          key: ${{ runner.os }}-build-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Setup database
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/bookkeeping_test
        run: |
          cd packages/database && npx prisma db push --skip-generate

      - name: Restore Playwright browsers cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}-chromium
          fail-on-cache-miss: true

      - name: Run E2E tests with performance tracking
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/bookkeeping_test
          JWT_SECRET: test-secret-key
          NEXTAUTH_SECRET: test-nextauth-secret
          NEXTAUTH_URL: http://localhost:3000
          CI: true
          TEST_MODE: fast
          NODE_ENV: test
          # Supabase Test Environment
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.TEST_SUPABASE_URL || secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY || secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.TEST_SUPABASE_SERVICE_ROLE_KEY || '' }}
          SUPABASE_DB_URL: ${{ secrets.TEST_SUPABASE_DB_URL || '' }}
          # Test credentials from secrets (with fallbacks)
          TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET || 'test-jwt-secret-do-not-use-in-production' }}
          TEST_ADMIN_EMAIL: ${{ secrets.TEST_ADMIN_EMAIL || 'admin.e2e@test.localhost' }}
          TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD || 'AdminE2E123!@#' }}
          TEST_ADMIN_NAME: ${{ secrets.TEST_ADMIN_NAME || 'E2E Test Admin' }}
          TEST_ACCOUNTANT_EMAIL: ${{ secrets.TEST_ACCOUNTANT_EMAIL || 'accountant.e2e@test.localhost' }}
          TEST_ACCOUNTANT_PASSWORD: ${{ secrets.TEST_ACCOUNTANT_PASSWORD || 'AccountantE2E123!@#' }}
          TEST_ACCOUNTANT_NAME: ${{ secrets.TEST_ACCOUNTANT_NAME || 'E2E Test Accountant' }}
          TEST_VIEWER_EMAIL: ${{ secrets.TEST_VIEWER_EMAIL || 'viewer.e2e@test.localhost' }}
          TEST_VIEWER_PASSWORD: ${{ secrets.TEST_VIEWER_PASSWORD || 'ViewerE2E123!@#' }}
          TEST_VIEWER_NAME: ${{ secrets.TEST_VIEWER_NAME || 'E2E Test Viewer' }}
          TEST_ORGANIZATION_ID: ${{ secrets.TEST_ORGANIZATION_ID || 'test-org-e2e-001' }}
          # Test configuration
          TEST_HEADLESS: true
          TEST_DEBUG_MODE: false
          TEST_SKIP_AUTH: false
        run: |
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] Starting fast E2E test suite (shard ${{ matrix.shard }})"
          START_TIME=$(date +%s)

          # Run fast test suite with sharding and unified config
          # Playwright will automatically start the web server based on webServer config
          cd apps/web
          timeout 360 npx playwright test --shard=${{ matrix.shard }} --grep-invert="@slow|@integration" || TEST_EXIT="$?"

          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] Fast E2E tests (shard ${{ matrix.shard }}) completed in ${DURATION}s" \
            "with exit code ${TEST_EXIT:-0}"
          echo "::notice title=E2E Performance (Shard ${{ matrix.shard }})::Tests completed in ${DURATION} seconds"

          # Save performance data with shard info
          # Replace "/" in shard name to avoid file path issues
          SHARD_NAME=$(echo "${{ matrix.shard }}" | sed 's/\//-/g')
          echo "{\"duration\": ${DURATION}, \"shard\": \"${{ matrix.shard }}\", " \
            "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}" > "performance-report-${SHARD_NAME}.json"
          exit "${TEST_EXIT:-0}"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-shard-${{ strategy.job-index }}
          path: apps/web/playwright-report/
          retention-days: 7

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos-shard-${{ strategy.job-index }}
          path: apps/web/test-results/
          retention-days: 3

      - name: Upload performance report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-report-shard-${{ strategy.job-index }}
          path: apps/web/performance-report-*.json
          retention-days: 7

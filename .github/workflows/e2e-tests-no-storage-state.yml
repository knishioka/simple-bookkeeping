name: E2E Tests (No Storage State)

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - '.github/workflows/e2e-tests*.yml'
      - 'playwright.config.ts'
      - 'pnpm-lock.yaml'

concurrency:
  group: e2e-tests-no-storage-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup E2E Environment
    uses: ./.github/workflows/reusable-setup.yml
    with:
      node-version: '20'
      build-packages: true
      build-app: true
      setup-database: false
      install-playwright: true
      playwright-browsers: 'chromium'
    secrets: inherit

  e2e-tests:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        shard: [1/3, 2/3, 3/3]

    steps:
      - uses: actions/checkout@v4

      - name: Start Supabase services simplified
        run: |
          # Pre-pull images
          docker compose -f docker-compose.supabase-test.yml pull --parallel --quiet || true

          # Start services
          docker compose -f docker-compose.supabase-test.yml up -d

          # Wait for services to be ready
          echo "Waiting for Supabase services to start..."
          sleep 20

          # Check services status
          docker compose -f docker-compose.supabase-test.yml ps

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Generate Prisma Client
        run: pnpm --filter @simple-bookkeeping/database prisma:generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

      - name: Restore build cache
        uses: actions/cache/restore@v4
        with:
          path: |
            apps/web/.next
            packages/*/dist
            **/*.tsbuildinfo
          key: ${{ runner.os }}-build-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        run: |
          # Install PostgreSQL client
          sudo apt-get update && sudo apt-get install -y postgresql-client

          # Wait for database and apply schema
          sleep 5
          cd packages/database && npx prisma db push --skip-generate
          echo "Database schema applied"

      - name: Restore Playwright browsers
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}-chromium
          fail-on-cache-miss: true

      - name: Run E2E tests without Storage State
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
          JWT_SECRET: 'super-secret-jwt-token-with-at-least-32-characters-for-testing'
          NEXTAUTH_SECRET: test-nextauth-secret
          NEXTAUTH_URL: http://localhost:3000
          CI: true
          TEST_MODE: fast
          NODE_ENV: test
          NEXT_PUBLIC_SUPABASE_URL: http://localhost:8000
          NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.SeJg9y9QBxuYLj9wZfbPOca6_MDbUk7jC3uJrG1gLDc
          SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.vS5M5F4q5KtvMxwiJxK84oQHWrYAWMHEr9n4nSBUdn8
          SUPABASE_DB_URL: postgresql://postgres:postgres@localhost:5432/postgres
          TEST_HEADLESS: true
          USE_GLOBAL_SETUP: false
          PREPARE_AUTH_STATE: false
          TEST_PARALLEL_INDEX: ${{ strategy.job-index }}
          TEST_PARALLEL_TOTAL: 3
        run: |
          echo "Starting E2E tests (shard ${{ matrix.shard }}) without Storage State"
          cd apps/web
          npx playwright test --shard=${{ matrix.shard }} --grep-invert="@slow|@integration"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-no-storage-shard-${{ strategy.job-index }}
          path: apps/web/playwright-report/
          retention-days: 7

      - name: Stop services
        if: always()
        run: |
          docker compose -f docker-compose.supabase-test.yml down -v || true

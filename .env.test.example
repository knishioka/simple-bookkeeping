# ==========================================
# Simple Bookkeeping E2E テスト環境変数設定
# ==========================================
# このファイルをコピーして.env.test.localを作成してください:
# cp .env.test.example .env.test.local
#
# 重要: .env.test.localはGitで管理されません。
# テスト専用のSupabaseプロジェクトを使用してください。
# 本番環境のSupabaseプロジェクトは絶対に使用しないでください。
# ==========================================

# ------------------------------------------
# Supabase テスト環境設定
# ------------------------------------------
# テスト専用のSupabaseプロジェクトを作成し、以下の値を設定してください。
# プロジェクト作成: https://app.supabase.com/new/[your-org]
#
# 設定値の取得方法:
# 1. Supabaseダッシュボードにログイン
# 2. プロジェクトを選択
# 3. Settings > API から以下の値を取得

# Supabase URL（プロジェクトURL）
# 例: https://abcdefghijklmnop.supabase.co
NEXT_PUBLIC_SUPABASE_URL=https://your-test-project-ref.supabase.co

# Supabase Anon Key（公開鍵）
# 例: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsI...
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-test-anon-key-here

# Supabase Service Role Key（サービスロールキー）
# 注意: この鍵は機密情報です。絶対にクライアントサイドで使用しないでください。
# 例: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwi...
SUPABASE_SERVICE_ROLE_KEY=your-test-service-role-key-here

# データベース直接接続URL（テスト環境リセット用）
# Settings > Database > Connection string から取得
# 例: postgresql://postgres:[YOUR-PASSWORD]@db.abcdefghijklmnop.supabase.co:6543/postgres
SUPABASE_DB_URL=postgresql://postgres:[YOUR-PASSWORD]@db.your-test-project-ref.supabase.co:6543/postgres

# ------------------------------------------
# テスト実行設定
# ------------------------------------------
# Node.js環境
NODE_ENV=test

# アプリケーションURL
NEXT_PUBLIC_APP_URL=http://localhost:3000

# テストタイムアウト設定（ミリ秒）
TEST_TIMEOUT=30000

# ------------------------------------------
# E2Eテスト用ユーザー設定
# ------------------------------------------
# テスト実行前に作成される固定テストユーザー
# これらのユーザーは各テスト実行前に削除・再作成されます

# 管理者ユーザー
TEST_ADMIN_EMAIL=admin.e2e@test.example.com
TEST_ADMIN_PASSWORD=AdminE2E123!@#
TEST_ADMIN_NAME=E2E Test Admin

# 経理担当ユーザー
TEST_ACCOUNTANT_EMAIL=accountant.e2e@test.example.com
TEST_ACCOUNTANT_PASSWORD=AccountantE2E123!@#
TEST_ACCOUNTANT_NAME=E2E Test Accountant

# 閲覧者ユーザー
TEST_VIEWER_EMAIL=viewer.e2e@test.example.com
TEST_VIEWER_PASSWORD=ViewerE2E123!@#
TEST_VIEWER_NAME=E2E Test Viewer

# テスト組織ID（固定）
TEST_ORGANIZATION_ID=test-org-e2e-001

# ------------------------------------------
# Playwright設定（オプション）
# ------------------------------------------
# ヘッドレスモード（CI環境では必ずtrue）
TEST_HEADLESS=true

# スローモーション（デバッグ用、ミリ秒）
TEST_SLOW_MO=0

# ビデオ記録（失敗時のみ記録推奨）
TEST_VIDEO=retain-on-failure

# スクリーンショット撮影（失敗時のみ推奨）
TEST_SCREENSHOT=only-on-failure

# 並列実行設定
TEST_WORKERS=4

# リトライ設定（フレーキーなテスト対策）
TEST_RETRIES=2

# ------------------------------------------
# データベース設定（ローカル開発用）
# ------------------------------------------
# Prismaスキーマ用のデータベースURL
# 注意: Supabaseを使用する場合、この値は不要です
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/simple_bookkeeping_test?schema=public"

# ------------------------------------------
# セキュリティ設定
# ------------------------------------------
# テスト環境でのみ有効化するデバッグフラグ
# 本番環境では絶対にtrueにしないでください
TEST_DEBUG_MODE=false

# テスト用のJWT検証スキップ
# 注意: テスト環境でのみ使用してください
TEST_SKIP_AUTH=false

# ------------------------------------------
# ログ設定
# ------------------------------------------
# ログレベル（debug, info, warn, error）
LOG_LEVEL=info

# テストログの出力先
TEST_LOG_FILE=./test-results/test.log

# ------------------------------------------
# CI/CD環境変数
# ------------------------------------------
# GitHub Actions環境での実行判定
CI=false

# Vercel Preview環境のURL（CI環境で自動設定）
VERCEL_URL=

# GitHub Actions シークレット（CI環境で自動設定）
GITHUB_TOKEN=

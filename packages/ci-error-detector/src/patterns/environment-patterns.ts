/**
 * Environment and Configuration Error Patterns
 */

import { ErrorPattern, ErrorCategory, ErrorSeverity } from '../types';

export const environmentPatterns: ErrorPattern[] = [
  {
    id: 'env-variable-missing',
    category: ErrorCategory.ENVIRONMENT,
    severity: ErrorSeverity.CRITICAL,
    patterns: [
      /Environment variable\s+['"`]?(.+?)['"`]?\s+(?:is )?not (?:defined|set)/,
      /Missing required environment variable:\s+(.+)/,
      /process\.env\.(\w+)\s+is undefined/,
      /Cannot read environment variable:\s+(.+)/,
      /Required env var\s+['"`]?(.+?)['"`]?\s+is missing/,
    ],
    description: 'Missing environment variable',
    commonCauses: [
      'Environment variable not set',
      '.env file not loaded',
      'Different environment configuration',
      'Typo in environment variable name',
      'Missing secrets in CI/CD',
    ],
    suggestedFixes: [
      'Set the required environment variable',
      'Check .env file exists and is loaded',
      'Verify CI/CD secrets are configured',
      'Check for typos in variable names',
      'Review environment configuration',
    ],
    confidence: 0.95,
  },

  {
    id: 'dependency-version-mismatch',
    category: ErrorCategory.VERSION_MISMATCH,
    severity: ErrorSeverity.HIGH,
    patterns: [
      /peer dep missing/i,
      /requires a peer of\s+(.+?)@(.+?)\s+but/,
      /Version mismatch/,
      /Cannot resolve dependency/,
      /Conflicting peer dependency/,
      /npm ERR! peer dep missing/,
    ],
    description: 'Dependency version conflict',
    commonCauses: [
      'Incompatible package versions',
      'Missing peer dependencies',
      'Outdated lock file',
      'Conflicting dependencies',
      'Breaking changes in dependencies',
    ],
    suggestedFixes: [
      'Run npm/pnpm install to sync dependencies',
      'Update package versions to compatible ones',
      'Delete lock file and reinstall',
      'Check for peer dependency requirements',
      'Review recent dependency updates',
    ],
    confidence: 0.9,
  },

  {
    id: 'database-connection-error',
    category: ErrorCategory.DATABASE,
    severity: ErrorSeverity.CRITICAL,
    patterns: [
      /(?:Connection|connection)\s+(?:to database\s)?refused/,
      /ECONNREFUSED.*:(?:5432|3306|27017)/,
      /Cannot connect to (?:database|DB)/,
      /Database connection failed/,
      /Connection timeout.*database/,
      /Authentication failed.*database/,
    ],
    description: 'Database connection error',
    commonCauses: [
      'Database server not running',
      'Incorrect connection string',
      'Wrong credentials',
      'Network issues',
      'Database not accessible from CI',
    ],
    suggestedFixes: [
      'Verify database server is running',
      'Check database connection string',
      'Verify database credentials',
      'Ensure database is accessible',
      'Check if using correct database for environment',
    ],
    confidence: 0.95,
  },

  {
    id: 'authentication-error',
    category: ErrorCategory.AUTHENTICATION,
    severity: ErrorSeverity.CRITICAL,
    patterns: [
      /401\s+Unauthorized/,
      /403\s+Forbidden/,
      /Authentication failed/,
      /Invalid (?:token|credentials)/,
      /JWT.*(?:expired|invalid)/,
      /Unauthorized/,
    ],
    description: 'Authentication or authorization error',
    commonCauses: [
      'Invalid or expired tokens',
      'Missing authentication headers',
      'Incorrect credentials',
      'Expired sessions',
      'Insufficient permissions',
    ],
    suggestedFixes: [
      'Check authentication tokens',
      'Verify credentials are correct',
      'Ensure tokens are not expired',
      'Check authorization headers',
      'Review permission settings',
    ],
    confidence: 0.95,
  },

  {
    id: 'docker-error',
    category: ErrorCategory.CONTAINER,
    severity: ErrorSeverity.HIGH,
    patterns: [
      /docker.*(?:not found|not running)/,
      /Cannot connect to Docker daemon/,
      /Error response from daemon/,
      /Container.*(?:failed|exited)/,
      /docker build.*failed/,
    ],
    description: 'Docker or container error',
    commonCauses: [
      'Docker daemon not running',
      'Docker build failures',
      'Container configuration issues',
      'Missing Docker images',
      'Resource constraints',
    ],
    suggestedFixes: [
      'Ensure Docker daemon is running',
      'Check Dockerfile syntax',
      'Verify base images exist',
      'Review container logs',
      'Check system resources',
    ],
    confidence: 0.9,
  },

  {
    id: 'package-install-error',
    category: ErrorCategory.DEPENDENCY,
    severity: ErrorSeverity.CRITICAL,
    patterns: [
      /npm ERR!/,
      /pnpm ERR!/,
      /yarn error/,
      /ERESOLVE unable to resolve dependency tree/,
      /Cannot read properties of undefined \(reading 'version'\)/,
      /Package.*not found/,
      /Registry returned 404/,
    ],
    description: 'Package installation error',
    commonCauses: [
      'Network issues during installation',
      'Corrupted cache',
      'Registry unavailable',
      'Incompatible Node version',
      'Private package authentication issues',
    ],
    suggestedFixes: [
      'Clear npm/pnpm cache',
      'Delete node_modules and reinstall',
      'Check network connectivity',
      'Verify Node version compatibility',
      'Check registry configuration',
    ],
    confidence: 0.9,
  },

  {
    id: 'build-configuration-error',
    category: ErrorCategory.BUILD,
    severity: ErrorSeverity.CRITICAL,
    patterns: [
      /Build failed/,
      /Webpack.*error/,
      /Failed to compile/,
      /Build error/,
      /Compilation failed/,
      /vite.*error/i,
      /rollup.*error/i,
    ],
    description: 'Build or compilation configuration error',
    commonCauses: [
      'Invalid build configuration',
      'Missing build dependencies',
      'Syntax errors in code',
      'Resource path issues',
      'Memory constraints during build',
    ],
    suggestedFixes: [
      'Check build configuration files',
      'Verify all dependencies are installed',
      'Fix syntax errors in source code',
      'Check import paths and aliases',
      'Increase memory for build process',
    ],
    confidence: 0.85,
  },

  {
    id: 'permission-denied',
    category: ErrorCategory.ENVIRONMENT,
    severity: ErrorSeverity.HIGH,
    patterns: [
      /Permission denied/,
      /EACCES/,
      /Access denied/,
      /Operation not permitted/,
      /Cannot create directory.*Permission/,
    ],
    description: 'File system permission error',
    commonCauses: [
      'Insufficient file permissions',
      'Wrong user ownership',
      'Protected directories',
      'Container permission issues',
      'CI runner permission constraints',
    ],
    suggestedFixes: [
      'Check file and directory permissions',
      'Verify user has necessary access',
      'Use appropriate chmod/chown commands',
      'Review CI runner permissions',
      'Check Docker volume permissions',
    ],
    confidence: 0.95,
  },
];

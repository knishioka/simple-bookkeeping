# Docker Compose for Demo Environment
# モック/デモ用の環境設定
# データの永続化は行わず、毎回クリーンな状態でデモを開始

services:
  postgres:
    image: postgres:15-alpine
    container_name: simple-bookkeeping-demo-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-simple_bookkeeping}
    # データ永続化なし（毎回クリーンスタート）
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - demo-network

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: simple-bookkeeping-demo-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-simple_bookkeeping}?schema=public
      API_PORT: ${API_PORT:-3001}
      NODE_ENV: demo
      JWT_SECRET: demo-jwt-secret-for-testing-only
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_SECRET: demo-refresh-secret-for-testing-only
      JWT_REFRESH_EXPIRES_IN: 7d
    ports:
      - '${API_PORT:-3001}:${API_PORT:-3001}'
    networks:
      - demo-network
    # 初期化スクリプトをマウント
    volumes:
      - ./scripts/demo-init.sh:/app/demo-init.sh
    # APIサーバー起動後にデモデータを自動投入
    command: >
      sh -c "
        echo 'Starting API server...'
        npm run start &
        echo 'Waiting for API server to be ready...'
        sleep 10
        echo 'Initializing demo data...'
        /app/demo-init.sh
        wait
      "

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: simple-bookkeeping-demo-web
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:${API_PORT:-3001}/api/v1
      NODE_ENV: demo
    ports:
      - '${WEB_PORT:-3000}:3000'
    networks:
      - demo-network

  # Nginxリバースプロキシ（オプション）
  nginx:
    image: nginx:alpine
    container_name: simple-bookkeeping-demo-nginx
    depends_on:
      - web
      - api
    ports:
      - '${NGINX_PORT:-8080}:80'
    volumes:
      - ./nginx/demo.conf:/etc/nginx/nginx.conf:ro
    networks:
      - demo-network

networks:
  demo-network:
    driver: bridge
# デモ環境では永続化ボリュームは使用しない

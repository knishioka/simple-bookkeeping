# ==========================================
# Simple Bookkeeping 環境変数設定
# ==========================================
# このファイルをコピーして.env.localを作成してください:
# cp .env.example .env.local
#
# 環境変数の優先順位（高い順）:
# 1. .env.local       - ローカル設定（Gitで管理されない）
# 2. .env.production  - 本番環境設定（Gitで管理されない）
# 3. .env.development - 開発環境設定
# 4. .env             - 共通デフォルト値
# ==========================================

# ------------------------------------------
# データベース設定
# ------------------------------------------
# PostgreSQL接続文字列
# 形式: postgresql://[user]:[password]@[host]:[port]/[database]?schema=[schema]
#
# Dockerを使用したローカル開発:
DATABASE_URL="postgresql://bookkeeping:bookkeeping@localhost:5432/simple_bookkeeping?schema=public"
#
# Dockerを使用しないローカル開発:
# DATABASE_URL="postgresql://postgres:postgres@localhost:5432/simple_bookkeeping?schema=public"
#
# 本番環境の例（実際の値は環境に応じて設定）:
# DATABASE_URL="postgresql://user:password@your-db-host:5432/your-database?schema=public"

# データベースプール設定（オプション）
# DB_POOL_SIZE=10              # 接続プールサイズ（デフォルト: CPUコア数 * 2 + 1）
# DB_POOL_TIMEOUT=10           # プールタイムアウト（秒）（デフォルト: 10）
# DB_CONNECT_TIMEOUT=30        # 接続タイムアウト（秒）（デフォルト: 30）
# DB_IDLE_TIMEOUT=300          # アイドル接続タイムアウト（秒）（デフォルト: 300）

# ------------------------------------------
# APIサーバー設定 (apps/api)
# ------------------------------------------
# APIサーバーのポート番号
API_PORT=3001

# Node.js環境（development, production, test）
NODE_ENV=development

# JWT認証設定
# 重要: 本番環境では必ず安全なランダム文字列に変更してください
# 推奨: openssl rand -base64 32 で生成
JWT_SECRET=local-dev-secret-change-in-production
JWT_EXPIRES_IN=7d
JWT_REFRESH_SECRET=local-dev-refresh-secret-change-in-production
JWT_REFRESH_EXPIRES_IN=30d

# CORS設定
# カンマ区切りで複数のオリジンを指定可能
# 例: CORS_ORIGIN="http://localhost:3000,https://your-domain.com"
CORS_ORIGIN=http://localhost:3000

# ログレベル（debug, info, warn, error）
LOG_LEVEL=info

# Swagger APIドキュメントの有効化
ENABLE_SWAGGER=true

# ------------------------------------------
# フロントエンド設定 (apps/web)
# ------------------------------------------
# APIのベースURL
# 重要: 必ず /api/v1 を含む完全なパスを指定してください
# 正: http://localhost:3001/api/v1
# 誤: http://localhost:3001
NEXT_PUBLIC_API_URL=http://localhost:3001/api/v1

# アプリケーションのベースURL
NEXT_PUBLIC_APP_URL=http://localhost:3000

# ------------------------------------------
# キャッシュ設定（オプション）
# ------------------------------------------
# Redis接続URL（キャッシュ機能を使用する場合）
REDIS_URL=redis://localhost:6379

# ------------------------------------------
# デプロイメント監視（オプション）
# ------------------------------------------
# Vercel APIトークン（デプロイメント状態確認用）
# 取得方法: https://vercel.com/account/tokens
VERCEL_TOKEN=your-vercel-token-here

# Render APIキー（デプロイメント状態確認用）
# 取得方法: https://dashboard.render.com/u/settings
RENDER_API_KEY=rnd_xxxxxxxxxxxxxxxxxxxxxxxxxx

# ------------------------------------------
# 将来の拡張用（現在は未使用）
# ------------------------------------------
# メール送信設定
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your-email@example.com
# SMTP_PASS=your-password
# SMTP_FROM=noreply@example.com

# ファイルストレージ設定
# STORAGE_TYPE=local
# STORAGE_PATH=./uploads
# AWS_S3_BUCKET=your-bucket-name
# AWS_S3_REGION=ap-northeast-1
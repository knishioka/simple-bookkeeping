# Check for secrets using gitleaks
if command -v gitleaks >/dev/null 2>&1; then
  echo "🔍 Checking for secrets with gitleaks..."
  gitleaks detect --source . --verbose --redact
  if [ $? -ne 0 ]; then
    echo "❌ Secrets detected! Please remove them before committing."
    exit 1
  fi
  echo "✅ No secrets detected"
else
  echo "⚠️  gitleaks is not installed. Install it with: brew install gitleaks"
fi

# Run build checks for dependency issues
if [ -f "./scripts/check-build.sh" ]; then
  bash ./scripts/check-build.sh
  if [ $? -ne 0 ]; then
    echo "❌ Build checks failed! Please fix the issues before committing."
    exit 1
  fi
fi

# Check GitHub Actions workflows if they've been modified
workflow_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.github/workflows/.*\.(yml|yaml)$' || true)
script_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(sh|bash)$' || true)

if [ -n "$workflow_files" ] || [ -n "$script_files" ]; then
  if [ -f "./scripts/validate-workflows.sh" ]; then
    echo "🔍 Validating workflows and scripts..."

    # Determine what to validate
    validate_args=""
    if [ -n "$workflow_files" ]; then
      validate_args="-w"
    fi
    if [ -n "$script_files" ]; then
      if [ -z "$validate_args" ]; then
        validate_args="-s"
      else
        # Both workflows and scripts changed, validate all
        validate_args=""
      fi
    fi

    # Run validation but don't block if tools aren't installed
    bash ./scripts/validate-workflows.sh $validate_args || true
    echo "⚠️  Validation completed (non-blocking for initial implementation)"
  fi
fi

# Auto-fix missing newlines at end of files
echo "🔧 Auto-fixing missing newlines at end of files..."
files_fixed=""
for file in $(git diff --cached --name-only --diff-filter=ACM); do
  if [ -f "$file" ] && [ -s "$file" ]; then
    if [ -n "$(tail -c 1 "$file")" ]; then
      echo "" >> "$file"
      git add "$file"
      files_fixed="$files_fixed $file"
    fi
  fi
done

if [ -n "$files_fixed" ]; then
  echo "✅ Fixed missing newlines in:"
  for file in $files_fixed; do
    echo "  - $file"
  done
else
  echo "✅ All files have proper newlines"
fi

npx lint-staged
